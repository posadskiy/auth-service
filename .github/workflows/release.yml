name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - develop

env:
  JAVA_VERSION: '21'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag or commit message
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          # Extract from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          TAG_NAME=$GITHUB_REF_NAME
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "trigger_type=tag" >> $GITHUB_OUTPUT
        else
          # Extract from commit message
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "Checking commit message: $COMMIT_MSG"
          
          # Look for version patterns in commit message
          if [[ $COMMIT_MSG =~ v([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?) ]]; then
            VERSION="${BASH_REMATCH[1]}"
            TAG_NAME="v$VERSION"
            echo "Found version: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "trigger_type=commit" >> $GITHUB_OUTPUT
          else
            echo "No valid version pattern found in commit message: $COMMIT_MSG"
            echo "Expected format: v1.0.0, v2.1.3, v1.0.0-beta, etc."
            echo "Skipping release creation"
            exit 0
          fi
        fi
        
        - name: Create Release
      if: steps.version.outputs.version != ''
              env:
          GH_TOKEN: ${{ secrets.DEPLOYMENT_GITHUB_TOKEN }}
      run: |
        # Create release body
        cat > release_body.md << 'EOF'
        ## Auth Service Release ${{ steps.version.outputs.version }}
        
        ### 🚀 What's New
        - Authentication and authorization improvements
        - Security enhancements
        - Performance optimizations
        
        ### 📦 Release Artifacts
        - Source code tagged with version ${{ steps.version.outputs.version }}
        - Maven artifacts available in the repository
        
        ### 🔧 Build Instructions
        ```bash
        mvn clean package -DskipTests
        java -jar auth-service-web/target/auth-service-web-*.jar
        ```
        
        ### 📝 Release Trigger
        ${{ steps.version.outputs.trigger_type == 'commit' && 'This release was triggered by a commit message with version pattern.' || 'This release was triggered by a git tag push.' }}
        EOF
        
        # Create release using GitHub CLI
        gh release create ${{ steps.version.outputs.tag }} \
          --title "Auth Service ${{ steps.version.outputs.version }}" \
          --notes-file release_body.md \
          --draft=false \
          --prerelease=false

 
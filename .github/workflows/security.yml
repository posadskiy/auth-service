name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Run weekly on Monday at 2 AM

env:
  JAVA_VERSION: '21'

jobs:
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run OWASP Dependency Check
      run: |
        if [ -n "${{ secrets.NVD_API_KEY }}" ]; then
          echo "Using NVD API key for faster dependency check"
          mvn org.owasp:dependency-check-maven:check \
            -Dformat=HTML \
            -Dformat=JSON \
            -DfailOnCVSS=7 \
            -Dnvd.api.key=${{ secrets.NVD_API_KEY }} \
            -B
        else
          echo "No NVD API key provided, using local cache to speed up check"
          mvn org.owasp:dependency-check-maven:check \
            -Dformat=HTML \
            -Dformat=JSON \
            -DfailOnCVSS=7 \
            -DcveValidForHours=168 \
            -B
        fi
          
    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-results
        path: target/dependency-check-report.*
        retention-days: 30
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './target/dependency-check-report.json';
          
          if (fs.existsSync(path)) {
            const report = JSON.parse(fs.readFileSync(path, 'utf8'));
            const vulnerabilities = report.dependencies?.filter(dep => dep.vulnerabilities?.length > 0) || [];
            
            if (vulnerabilities.length > 0) {
              const comment = `## 🔒 Security Scan Results
              
              ⚠️ **${vulnerabilities.length} dependencies with vulnerabilities found**
              
              ${vulnerabilities.map(dep => 
                `- **${dep.fileName}**: ${dep.vulnerabilities.length} vulnerabilities`
              ).join('\n')}
              
              See the full report in the artifacts.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              const comment = `## 🔒 Security Scan Results
              
              ✅ **No vulnerabilities found in dependencies**`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          }

 
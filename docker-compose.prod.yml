services:
  database-prod:
    image: postgres:15
    container_name: auth-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${AUTH_DATABASE_NAME}
      POSTGRES_USER: ${AUTH_DATABASE_USER}
      POSTGRES_PASSWORD: ${AUTH_DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - user-web-network

  web-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        GITHUB_USERNAME: ${GITHUB_USERNAME}
    image: posadskiy/auth-service:latest
    container_name: auth-web-prod
    restart: unless-stopped
    depends_on:
      - database-prod
    environment:
      MICRONAUT_ENVIRONMENTS: prod
      GITHUB_USERNAME: ${GITHUB_USERNAME}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      DATASOURCE_URL: jdbc:postgresql://auth-db-prod:5432/${AUTH_DATABASE_NAME}
      DATASOURCE_USERNAME: ${AUTH_DATABASE_USER}
      DATASOURCE_PASSWORD: ${AUTH_DATABASE_PASSWORD}
      JWT_GENERATOR_SIGNATURE_SECRET: ${JWT_GENERATOR_SIGNATURE_SECRET}
      JAEGER_SERVICE_NAME: auth-service
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    ports:
      - "8100:8100"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "logging=promtail"
      - "service=auth-service"
    networks:
      - user-web-network
      - observability-stack-network
    # Add .internal DNS aliases to match Kubernetes service names
    extra_hosts:
      - "user-service.internal:user-service"
      - "email-service.internal:email-service"
      - "auth-service.internal:auth-service"
      - "email-template-service.internal:email-template-service"

volumes:
  postgres_data:

networks:
  user-web-network:
    external: true
  observability-stack-network:
    external: true 
